g++  -o calc++.o -c calc++.cc
g++  -o calc++-scanner.o -c calc++-scanner.cc
g++  -o calc++-parser.o -c calc++-parser.cc
g++  -o calc++-driver.o -c calc++-driver.cc
g++   calc++.o calc++-scanner.o calc++-parser.o calc++-driver.o   -o calc++
./test.sh

tests/test1.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
Das Programm läuft!

x: Container: mathExp
y: Container: mathExp
z: Container: mathExp
Tree:
Container: root
	-> Container: package
		-> Id: main
	-> Container: imports
		-> Id: file1
		-> Id: file2
	-> Container: functions
		-> function: func
			-> Id: main
			-> assigment: =
				-> Id: x
				-> Container: mathExp
					-> Expression: *
						-> Expression: +
							-> Number: 1
							-> Number: 2
						-> Expression: +
							-> Number: 3
							-> Expression: *
								-> Number: 4
								-> Expression: +
									-> Number: 5
									-> Number: 6
			-> assigment: =
				-> Id: y
				-> Container: mathExp
					-> Expression: +
						-> Expression: +
							-> Number: 1
							-> Expression: *
								-> Number: 2
								-> Number: 3
						-> Expression: *
							-> Number: 4
							-> Number: 5
			-> assigment: =
				-> Id: z
				-> Container: mathExp
					-> Expression: +
						-> Expression: +
							-> Expression: +
								-> Expression: +
									-> Number: 1
									-> Number: 2
								-> Number: 3
							-> Number: 4
						-> Number: 5


tests/test2.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
Das Programm läuft!

testVar: Container: mathExp
testVar2: Container: mathExp
Tree:
Container: root
	-> Container: package
		-> Id: main
	-> Container: imports
	-> Container: functions
		-> function: func
			-> Id: test
			-> assigment: =
				-> Id: testVar
				-> Container: mathExp
					-> Expression: *
						-> Expression: +
							-> Number: 2000
							-> Number: 9
						-> Expression: +
							-> Number: 100
							-> Expression: +
								-> Expression: *
									-> Number: 20
									-> Number: 4
								-> Number: 1
		-> function: func
			-> Id: test2
			-> assigment: =
				-> Id: testVar2
				-> Container: mathExp
					-> Number: 2


tests/test3.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
Das Programm läuft!

text: string: fuuu
x: Container: mathExp
Tree:
Container: root
	-> Container: package
		-> Id: main
	-> Container: imports
		-> Id: file1
		-> Id: file2
	-> Container: functions
		-> function: func
			-> Id: main
			-> assigment: =
				-> Id: x
				-> Container: mathExp
					-> Expression: *
						-> Expression: +
							-> Id: a
							-> Number: 2
						-> Expression: +
							-> Id: b
							-> Expression: *
								-> Id: c
								-> Expression: +
									-> Number: 5
									-> Id: d
			-> assigment: =
				-> Id: text
				-> string: fuuu


tests/test4.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
Das Programm läuft!

x: string: Hallo
Tree:
Container: root
	-> Container: package
		-> Id: main
	-> Container: imports
		-> Id: file1
		-> Id: file2
	-> Container: functions
		-> function: func
			-> Id: main
			-> assigment: =
				-> Id: x
				-> string: Hallo


tests/test5.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
Das Programm läuft!

errorLine: Container: mathExp
x: Container: mathExp
Tree:
Container: root
	-> Container: package
		-> Id: main
	-> Container: imports
		-> Id: fmt
	-> Container: functions
		-> function: func
			-> Id: main
			-> assigment: =
				-> Id: x
				-> Container: mathExp
					-> Number: 0
			-> assigment: =
				-> Id: errorLine
				-> Container: mathExp
					-> Number: 7
		-> function: func
			-> Id: test


tests/fail1.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
8.1: syntax error, unexpected }, expecting ;
Ich kompiliere erst, wenn das Programm läuft!

tests/fail2.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
1.1-6: syntax error, unexpected import, expecting package
Ich kompiliere erst, wenn das Programm läuft!

tests/fail3.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
1.1-4: syntax error, unexpected func, expecting package
Ich kompiliere erst, wenn das Programm läuft!

tests/fail4.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
5.11: syntax error, unexpected ), expecting (
Ich kompiliere erst, wenn das Programm läuft!

tests/fail5.go
Hallo, !0 is true, und ich bin Marcell D'Avis, 1 & 1
Starting D'Avis parse ...
5.12: syntax error, unexpected {, expecting )
Ich kompiliere erst, wenn das Programm läuft!
